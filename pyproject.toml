[project]
name = "advent_of_code"
version = "0.1.0"
description = "Environment for Advent of Code"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Martin HÃ¸y", email = "martin@hoy.priv.no" }]
# 
dependencies = [
    "loguru>=0.7.3",
    "matplotlib>=3.9.3",
    "networkx>=3.4.2",
    "pandas>=2.2.3",
    "plotly>=5.24.1",
    "portion>=2.6.0",
    "pydantic>=2.10.3",
    "scipy>=1.14.1",
    "sympy>=1.13.3",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "pre-commit>=4.0.1",
]

[tool.ruff]
# Consider packages in the src directory as first-party code
src = ["src"]
# Run ruff on Notebooks as well
extend-include = ["*.ipynb"]

[tool.ruff.lint.per-file-ignores]
# Allow the use of assert in tests
"tests/*" = ["S101"]

[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "I",   # isort
    "ICN", # flake8-import-conventions
    "D",   # pydocstyle
    "N",   # pep8-naming
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "PTH", # flake8-use-pathlib
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
    "PD",  # pandas-vet
    # "FAST", # FastAPI
]
ignore = [
    "ISC001", # may cause conflicts when used with the formatter
]

[tool.ruff.lint.pydocstyle]
convention = "google"


# mypy configuration, taken from pydantic documentation
[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
